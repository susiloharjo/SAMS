version: '3.8'

services:
  # PostgreSQL Database
  sams-postgres:
    image: postgres:16-alpine
    container_name: sams-postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  sams-redis:
    image: redis:7-alpine
    container_name: sams-redis
    ports:
      - "6380:6379"
    restart: unless-stopped

  # # pgAdmin (Database Management)
  # sams-pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: sams-pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
  #   ports:
  #     - "5051:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   depends_on:
  #     - sams-postgres
  #   restart: unless-stopped

  # SAMS Backend
  sams-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sams-backend
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    restart: unless-stopped
    depends_on:
      sams-postgres:
        condition: service_healthy
      sams-redis:
        condition: service_started

  # SAMS Frontend
  sams-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
        - NEXT_PUBLIC_API_URL=http://localhost:8080
        - NEXT_PUBLIC_ENVIRONMENT=${NEXT_PUBLIC_ENVIRONMENT}
    container_name: sams-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_ENVIRONMENT=${NEXT_PUBLIC_ENVIRONMENT}
    depends_on:
      - sams-backend
    restart: unless-stopped

  sams-mcp-server:
    container_name: sams-mcp-server
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - sams-backend

volumes:
  postgres_data:
  pgadmin_data:

networks:
  sams-network:
